/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.18).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Area;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2021-01-07T10:48:56.568Z")

@Api(value = "area", description = "the area API")
@RequestMapping(value = "/v2")
public interface AreaApi {

    @ApiOperation(value = "Add a new area to the database", nickname = "addArea", notes = "", tags={ "area", })
    @ApiResponses(value = { 
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/area",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> addArea(@ApiParam(value = "Area object that needs to be added to the database" ,required=true )  @Valid @RequestBody Area body);


    @ApiOperation(value = "Returns all the priority areas", nickname = "getAreas", notes = "Returns an array of priority areas and their ids", response = Area.class, responseContainer = "List", tags={ "area", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Area.class, responseContainer = "List") })
    @RequestMapping(value = "/area/getAreas",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Area>> getAreas();

}
